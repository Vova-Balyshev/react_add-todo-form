{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","getUserById","todoId","usersFromServer","find","users","todoPlusUser","userId","App","useState","setTodos","setTitle","setUserId","errorTitle","setErrorTitle","errorSelect","setErrorSelect","action","method","onSubmit","e","preventDefault","trim","prevTodos","newTodo","Math","max","type","placeholder","value","onChange","target","replace","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fcf8a03.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { TODO } from '../../types/TODO';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: TODO\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, completed, title, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TODO } from '../../types/TODO';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: TODO[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <li>\n          <TodoInfo key={todo.id} todo={todo} />\n        </li>\n      ))}\n    </section>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { TODO } from './types/TODO';\nimport { TodoList } from './components/TodoList/TodoList';\n\nfunction getUserById(todoId: number): User | null {\n  return usersFromServer.find(users => users.id === todoId) || null;\n}\n\nconst todoPlusUser = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.id),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todoPlusUser);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorSelect, setErrorSelect] = useState(false);\n\n  const clearForm = () => {\n    if (errorTitle) {\n      setTitle('');\n    }\n\n    if (errorSelect) {\n      setUserId(0);\n    }\n  };\n\n  function addToDo() {\n    if (!title.trim()) {\n      setErrorTitle(true);\n    }\n\n    if (!userId) {\n      setErrorSelect(true);\n    }\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    setTodos((prevTodos: TODO[]) => {\n      const newTodo: TODO = {\n        id: Math.max(...todoPlusUser.map(todo => todo.id)) + 1,\n        title,\n        userId,\n        completed: false,\n        user: getUserById(userId),\n      };\n\n      return [...prevTodos, newTodo];\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          addToDo();\n          clearForm();\n        }}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            className=\"mb\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(e) => {\n              setTitle(e.target.value\n                .replace(/[!@#$%'`\";:|^&*,.\\\\<>?/()_+={\\][}-]/g, ''));\n\n              if (errorTitle) {\n                setErrorTitle(false);\n              }\n            }}\n          />\n          {errorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            className=\"mb\"\n            value={userId}\n            onChange={(e) => {\n              setUserId(Number(e.target.value));\n              if (errorSelect) {\n                setErrorSelect(false);\n              }\n            }}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n\n            ))}\n          </select>\n\n          {errorSelect && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}